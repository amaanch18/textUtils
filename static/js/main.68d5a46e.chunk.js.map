{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","aria-checked","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","joinedWord","split","reverse","join","navigator","clipboard","writeText","filter","element","defaultProps","aboutText","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.68d5a46e.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"/\">Home</a>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                        </li> */}\n                    </ul>\n                   \n                    <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" aria-checked role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n                    </div>\n\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title Here',\n    aboutText: 'About'\n}","import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick =() => {\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to Upper Case!\", \"success\");\n    }\n    const handleLoClick =() => {\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to lower Case!\", \"success\");\n    }\n    const handleOnChange =(event) => {\n        setText(event.target.value);\n    }\n    const handleClearClick =(event) => {\n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n    const handleReverseClick =(event) => {\n        let splitWord = text.split(\"\");\n        let reverseWord = splitWord.reverse(\"\");\n        let joinedWord = reverseWord.join(\"\");\n        let newText = joinedWord;\n        setText(newText);\n        props.showAlert(\"Text Reversed\", \"success\");\n    }\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text);\n        props.showAlert(\"Text Copied\", \"success\");\n    }\n\n    const[text , setText] = useState('');\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\n            <h1 className='mb-4'>{props.heading} </h1>\n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'grey':'white' , color: props.mode === 'dark'?'white':'black' }} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick} >Convert to upper case</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick} >Convert to lower case</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick} >Clear Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleReverseClick} >Reverse Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy} >Copy Text</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'black'}}>\n            <h2>Your Text Summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>It will take {0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes to read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n        </>\n    )\n}\n\n","import React from 'react'\n\nfunction Alert(props) {\n\n    const capitalize =(word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '50px'}}>\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n            </div>}\n        </div>\n    )\n}\n\nexport default Alert","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React,{useState} from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message , type) => {\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode =() => {\n    if( mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'rgb(3 20 62)';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n\n  return (\n    <>  \n    {/* <Router> */}\n    <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert = {alert}  />\n    <div className=\"container my-3\" >\n      {/* <Routes> */}\n        {/* <Route exact path=\"/\" element ={<TextForm showAlert= {showAlert} heading=\"Enter the text to analyze below\" mode = {mode} />}/> */}\n        <TextForm showAlert= {showAlert} heading=\"Enter the text to analyze below\" mode = {mode} />\n        {/* <Route exact path=\"/about\" element = {<About mode={mode} toggleMode = {toggleMode}/>}/> */}\n      {/* </Routes> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}