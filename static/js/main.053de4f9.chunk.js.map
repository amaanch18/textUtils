{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","react_default","a","createElement","className","style","color","mode","backgroundColor","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","href","title","aria-label","aria-current","onClick","toggleMode","aria-checked","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","joinedWord","split","reverse","join","navigator","clipboard","writeText","filter","element","defaultProps","aboutText","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","dist","components_Alert","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.053de4f9.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function About(props) {\n\n\n    return (\n        <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black',backgroundColor: props.mode === 'dark'?'rgb(3 20 62)':'white'}}>\n            <h1 className=\"my-3\">About Us</h1>\n            <div className=\"accordion\" id=\"accordionExample\" >\n                <div className=\"accordion-item\" >\n                    <h2 className=\"accordion-header\" id=\"headingOne\" >\n                        <button className=\"accordion-button\"  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={{backgroundColor: props.mode === 'dark'?'grey':'white' , color: props.mode === 'dark'?'white':'black' }}>\n                        <strong>Analyze your Text</strong> \n                        </button>\n                    </h2>\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\"  >\n                            Textutils gives you a way to analyze your text quickly and efficiently. Be it word count , character count.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\n                        <button className=\"accordion-button collapsed\"  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={{backgroundColor: props.mode === 'dark'?'grey':'white' , color: props.mode === 'dark'?'white':'black' }}>\n                        <strong>Free to use</strong>    \n                        </button>\n                    </h2>\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" >\n                            Textutil is a free counter tool that provides instant character count & word count statistics for a given text. Textutils reports the number of words and characters.Thus it is suitable for writing text with word/ character limit.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\n                        <button className=\"accordion-button collapsed\"  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={{backgroundColor: props.mode === 'dark'?'grey':'white' , color: props.mode === 'dark'?'white':'black' }}>\n                           <strong>Browser Compatible </strong> \n                        </button>\n                    </h2>\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" >\n                            This word counter software works in any web browsers such as Chrome, firefox , Safari . It suits to count characters in facebook , blog, books, excel document, etc.\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                        </li> */}\n                    </ul>\n                   \n                    <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" aria-checked role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n                    </div>\n\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title Here',\n    aboutText: 'About'\n}","import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick =() => {\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to Upper Case!\", \"success\");\n    }\n    const handleLoClick =() => {\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to lower Case!\", \"success\");\n    }\n    const handleOnChange =(event) => {\n        setText(event.target.value);\n    }\n    const handleClearClick =(event) => {\n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n    const handleReverseClick =(event) => {\n        let splitWord = text.split(\"\");\n        let reverseWord = splitWord.reverse(\"\");\n        let joinedWord = reverseWord.join(\"\");\n        let newText = joinedWord;\n        setText(newText);\n        props.showAlert(\"Text Reversed\", \"success\");\n    }\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text);\n        props.showAlert(\"Text Copied\", \"success\");\n    }\n\n    const[text , setText] = useState('');\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\n            <h1 className='mb-4'>{props.heading} </h1>\n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'grey':'white' , color: props.mode === 'dark'?'white':'black' }} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick} >Convert to upper case</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick} >Convert to lower case</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick} >Clear Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleReverseClick} >Reverse Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy} >Copy Text</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'black'}}>\n            <h2>Your Text Summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>It will take {0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes to read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n        </>\n    )\n}\n\n","import React from 'react'\n\nfunction Alert(props) {\n\n    const capitalize =(word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '50px'}}>\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n            </div>}\n        </div>\n    )\n}\n\nexport default Alert","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React,{useState} from 'react'\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message , type) => {\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode =() => {\n    if( mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'rgb(3 20 62)';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n\n  return (\n    <>  \n\n    <Router>\n    <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert = {alert}  />\n    <div className=\"container my-3\" >\n      <Routes>\n        <Route exact path=\"/\" element ={<TextForm showAlert= {showAlert} heading=\"Enter the text to analyze below\" mode = {mode} />}/>\n        <Route exact path=\"/about\" element = {<About mode={mode} toggleMode = {toggleMode}/>}/>\n      </Routes>\n    </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}